{
	"info": {
		"_postman_id": "416fe100-adae-4a49-aa33-0f36177cd390",
		"name": "OpenBankingBR",
		"description": "Test Collection for OpenBanking APIs (AU)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3708908"
	},
	"item": [
		{
			"name": "OIDC - Authorise/Obtain Token (Hybrid Flow) - Basic Auth",
			"item": [
				{
					"name": "Consent - Step 0 Acquire Token for Consent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store scope, access token and id token to reuse in subsequent calls",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"consent_access_token\", jsonData.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "consents",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/token",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consent - Step  0.5 Create Consent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store scope, access token and id token to reuse in subsequent calls",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"consent_id\", jsonData.data.consentId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{consent_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-fapi-auth-date",
								"value": "2021-09-08",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"loggedUser\": {\n      \"document\": {\n        \"identification\": \"11111111111\",\n        \"rel\": \"CPF\"\n      }\n    },\n    \"businessEntity\": {\n      \"document\": {\n        \"identification\": \"11111111111111\",\n        \"rel\": \"CNPJ\"\n      }\n    },\n    \"permissions\": {{permissions}},\n    \"expirationDateTime\": \"2024-05-21T08:30:00Z\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/consents/v2/consents",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"consents",
								"v2",
								"consents"
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Authorise - Step 1 (Hybrid) - /authorise",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store html interaction  and uuid to use in subsequent calls",
									"",
									"var html = cheerio(responseBody);",
									"var nextInteraction1 = html.find('#loginForm').attr('action');",
									"",
									"pm.environment.set(\"nextInteraction1\", nextInteraction1);",
									"",
									"// If the auth code had already been issued and was still valid, this",
									"// invocation would directly return it (no necessary login)",
									"// if that's the case, store the resulting auth_code ",
									"",
									"const htmlResponse = cheerio(responseBody);",
									"var temp_auth_code = html.find('[name=\"code\"]').val();",
									"var temp_id_token = html.find('[name=\"id_token\"]').val();",
									"var temp_state = html.find('[name=\"state\"]').val();",
									"const $ = cheerio.load(responseBody);",
									"var temp_cb_uri = $('form').attr('action');",
									"pm.environment.set(\"temp_auth_code\", temp_auth_code);",
									"pm.environment.set(\"temp_id_token\", temp_id_token);",
									"pm.environment.set(\"temp_state\", temp_state);",
									"pm.environment.set(\"temp_cb_uri\", temp_cb_uri);",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/authorise?client_id={{client_id}}&redirect_uri={{client_redirect_uri}}&response_type=code%20id_token&scope={{static_scope_escaped}}%20consent:{{consent_id}}&state=af0ifjsldklaaabc&nonce=n-0S6_WzA2Mj223s&acr=urn:brasil:openbanking:loa2",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"authorise"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"description": "If you want to change this value, always do it by altering the corresponding env variable. IMPORTANT: This client_id, as well as its redirect uri and public key needs to be registered with the OIDC provider included in the reference implementation (Manual edit of client configuration file)"
								},
								{
									"key": "redirect_uri",
									"value": "{{client_redirect_uri}}",
									"description": "If you want to change this value, always do it by altering the corresponding env variable"
								},
								{
									"key": "response_type",
									"value": "code%20id_token"
								},
								{
									"key": "scope",
									"value": "{{static_scope_escaped}}%20consent:{{consent_id}}",
									"description": "Add the required scopes, separated by %20"
								},
								{
									"key": "state",
									"value": "af0ifjsldklaaabc",
									"description": "For test purposes, any string will do"
								},
								{
									"key": "nonce",
									"value": "n-0S6_WzA2Mj223s",
									"description": "For test purposes, any string will do"
								},
								{
									"key": "max_age",
									"value": "600",
									"disabled": true
								},
								{
									"key": "acr",
									"value": "urn:brasil:openbanking:loa2",
									"description": "One of the valid authentication types the OIDC provider accepts"
								},
								{
									"key": "response_mode",
									"value": "form_post",
									"description": "This response mode allows automation in Postman in the Step to get the authorisation code",
									"disabled": true
								},
								{
									"key": "jti",
									"value": "37747cd1-c105-4569-9f75-4adf28b73e32",
									"description": "For test purposes, any jti will do",
									"disabled": true
								},
								{
									"key": "exp",
									"value": "1596692638",
									"description": "Epoch timestamp. Any value in the future will work",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Authorise - Step 2 (Hybrid) - Submit login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store callback response from IdP to use in subsequent call",
									"",
									"const htmlResponse = cheerio(responseBody);",
									"var temp_auth_code = htmlResponse.find('[name=\"code\"]').val();",
									"var temp_id_token = htmlResponse.find('[name=\"id_token\"]').val();",
									"var temp_state = htmlResponse.find('[name=\"state\"]').val();",
									"const $ = cheerio.load(responseBody);",
									"var temp_cb_uri = $('form').attr('action');",
									"pm.environment.set(\"temp_auth_code\", temp_auth_code);",
									"pm.environment.set(\"temp_id_token\", temp_id_token);",
									"pm.environment.set(\"temp_state\", temp_state);",
									"pm.environment.set(\"temp_cb_uri\", temp_cb_uri);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "login",
									"value": "10203040",
									"type": "text"
								},
								{
									"key": "password",
									"value": "anyPasswordWillDo",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net{{nextInteraction1}}",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net{{nextInteraction1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Authorise - Step 2.5 (Hybrid)  - Follow redirect to display consent screen",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store URL to use in subsequent call",
									"",
									"var html = cheerio(responseBody);",
									"var nextInteraction2 = html.find('#consentForm').attr('action');",
									"",
									"pm.environment.set(\"nextInteraction2\", nextInteraction2);",
									"",
									"// In case the consent has already been authorised, this response will return the callback information, including the auth code",
									"var auth_code = html.find('[name=\"code\"]').val();",
									"pm.environment.set(\"auth_code\", auth_code);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "code",
									"value": "{{temp_auth_code}}",
									"type": "text"
								},
								{
									"key": "id_token",
									"value": "{{temp_id_token}}",
									"type": "text"
								},
								{
									"key": "state",
									"value": "{{temp_state}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{temp_cb_uri}}",
							"host": [
								"{{temp_cb_uri}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Authorise - Step 3 (Hybrid) - Submit consent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store auth code to use in subsequent call",
									"",
									"const htmlResponse = cheerio(responseBody);",
									"var auth_code = htmlResponse.find('[name=\"code\"]').val();",
									"pm.environment.set(\"auth_code\", auth_code);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "consent-status",
									"value": "AUTHORISED",
									"description": "Set to REJECTED to simulate the consent not being granted",
									"type": "text"
								},
								{
									"key": "ACCOUNT",
									"value": "0016272940883924",
									"description": "Simulates consent being granted for this account (Set to empty if you want to simulate no consent)",
									"type": "text"
								},
								{
									"key": "ACCOUNT",
									"value": "0016272830853116",
									"description": "Simulates consent being granted for this account (Set to empty if you want to simulate no consent)",
									"type": "text",
									"disabled": true
								},
								{
									"key": "CREDIT_CARD_ACCOUNT",
									"value": "00102398551199",
									"description": "Simulates consent being granted for this account (Set to empty if you want to simulate no consent)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net{{nextInteraction2}}",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net{{nextInteraction2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Acquire Token - Step 4 (Hybrid) - Basic Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store scope, access token and id token to reuse in subsequent calls",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"access_token\", jsonData.access_token);",
									"pm.environment.set(\"id_token\", jsonData.id_token);",
									"pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"pm.environment.set(\"scope\", jsonData.scope);",
									"pm.environment.set(\"cdr_arrangement_id\", jsonData.cdr_arrangement_id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								},
								{
									"key": "code",
									"value": "{{auth_code}}",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "{{client_redirect_uri}}",
									"type": "text"
								},
								{
									"key": "refresh_token",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/token",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				}
			],
			"description": "These 4 requests automate the steps of obtaining an authorisation code by navigating through the mock login and consent screens and obtaining a token using the authorisation code\n Use this approach when testing a client that has been added during the initial setup, as those client are persisted in the mock oidc provider and have been defined as accepting basic client auth.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "OIDC - Authorise/Obtain Token (HF) - PAR",
			"item": [
				{
					"name": "Consent Step 0 -  Generate Private Key JWT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store private_key_jwt to reuse in next call",
									"pm.environment.set(\"private_key_jwt\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/mock-obbr-client/privatekeyjwt?client_id={{client_id}}",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"mock-obbr-client",
								"privatekeyjwt"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{client_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Consent - Step 0.1 Acquire Token for Consent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store scope, access token and id token to reuse in subsequent calls",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"consent_access_token\", jsonData.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "consents",
									"type": "text"
								},
								{
									"key": "client_assertion_type",
									"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
									"type": "text"
								},
								{
									"key": "client_assertion",
									"value": "{{private_key_jwt}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/token",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consent - Step  0.5 Create Consent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store scope, access token and id token to reuse in subsequent calls",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"consent_id\", jsonData.data.consentId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{consent_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-fapi-auth-date",
								"value": "2021-09-08",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"loggedUser\": {\n      \"document\": {\n        \"identification\": \"11111111111\",\n        \"rel\": \"CPF\"\n      }\n    },\n    \"businessEntity\": {\n      \"document\": {\n        \"identification\": \"11111111111111\",\n        \"rel\": \"CNPJ\"\n      }\n    },\n    \"permissions\": {{permissions}},\n    \"expirationDateTime\": \"2024-05-21T08:30:00Z\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/consents/v2/consents",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"consents",
								"v2",
								"consents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 0 -  - Generate PAR request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store private_key_jwt to reuse in next call",
									"pm.environment.set(\"par_jwt\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/mock-obbr-client/authrequest?aud={{api_endpoint}}&client_id={{client_id}}&scope={{static_scope_escaped}}%20consent:{{consent_id}}&redirect_uri={{client_redirect_uri}}&requested_cpf=43908445778&is_cpf_essential=true&state=aaasdgaegeag",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"mock-obbr-client",
								"authrequest"
							],
							"query": [
								{
									"key": "aud",
									"value": "{{api_endpoint}}"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}"
								},
								{
									"key": "state",
									"value": "af0ifjsldkl",
									"disabled": true
								},
								{
									"key": "scope",
									"value": "{{static_scope_escaped}}%20consent:{{consent_id}}"
								},
								{
									"key": "redirect_uri",
									"value": "{{client_redirect_uri}}"
								},
								{
									"key": "nonce",
									"value": "n-0S6_WzA2Mj3",
									"disabled": true
								},
								{
									"key": "requested_cpf",
									"value": "43908445778"
								},
								{
									"key": "is_cpf_essential",
									"value": "true"
								},
								{
									"key": "requested_cnpj",
									"value": "00000000",
									"disabled": true
								},
								{
									"key": "is_cnpj_essential",
									"value": "true",
									"disabled": true
								},
								{
									"key": "state",
									"value": "aaasdgaegeag"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Authorise - Step 0 (Hybrid) - /par",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store the returned URI to reuse in subsequent calls",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"PAR_request_uri\", jsonData.request_uri);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Build JWT request based on params, and add to \"request\" param",
									"",
									"CryptoJS = require(\"crypto-js\");",
									"",
									"function base64url(source) {",
									"\t// Encode in classical base64",
									"\tencodedSource = CryptoJS.enc.Base64.stringify(source);",
									"",
									"\t// Remove padding equal characters",
									"\tencodedSource = encodedSource.replace(/=+$/, '');",
									"",
									"\t// Replace characters according to base64url specifications",
									"\tencodedSource = encodedSource.replace(/\\+/g, '-');",
									"\tencodedSource = encodedSource.replace(/\\//g, '_');",
									"",
									"\treturn encodedSource;",
									"}",
									"",
									"jwt_header = {};",
									"jwt_header.alg = \"RS256\";",
									"jwt_header.typ = \"JWT\";",
									"jwt_header.kid = pm.environment.get(\"client_public_key_kid\");",
									"",
									"console.log(\"jwt_header\",jwt_header);",
									"",
									"jwt_body = {};",
									"jwt_body.iss = pm.environment.get(\"client_id\");",
									"jwt_body.client_id = pm.environment.get(\"client_id\");",
									"jwt_body.sub = pm.environment.get(\"client_id\");",
									"jwt_body.aud = pm.environment.get(\"api_endpoint\");",
									"jwt_body.jti = pm.request.url.query.get(\"jti\");",
									"jwt_body.exp = Number(pm.request.url.query.get(\"exp\"));",
									"jwt_body.response_type = decodeURI(pm.request.url.query.get(\"response_type\"));",
									"jwt_body.redirect_uri = pm.environment.get(\"client_redirect_uri\");",
									"jwt_body.scope = decodeURI(pm.request.url.query.get(\"scope\"));",
									"jwt_body.state = pm.request.url.query.get(\"state\");",
									"jwt_body.nonce = pm.request.url.query.get(\"nonce\");",
									"jwt_body.acr_values = pm.request.url.query.get(\"acr_values\");",
									"jwt_body.max_age = Number(pm.request.url.query.get(\"max_age\"));",
									"jwt_body.response_mode = pm.request.url.query.get(\"response_mode\");",
									"",
									"console.log(\"jwt_body\",jwt_body);",
									"",
									"",
									"// // encode header",
									"// var stringifiedHeader = CryptoJS.enc.Utf8.parse(JSON.stringify(jwt_header));",
									"// var encodedHeader = base64url(stringifiedHeader);",
									"",
									"// // encode data",
									"// var stringifiedBody = CryptoJS.enc.Utf8.parse(JSON.stringify(jwt_body));",
									"// var encodedBody = base64url(stringifiedBody);",
									"",
									"// // build token",
									"// var token = encodedHeader + \".\" + encodedBody;",
									"",
									"// console.log(\"token\", token);",
									"",
									"// // sign token",
									"// var secret = pm.environment.get(\"client_private_key\");",
									"// // CryptoJS doesn't support RSA for encryption!! ",
									"// // Need to find a work around, for the moment, this script doesn't work",
									"// // AFAIK, it's very complicated to add another js library to postman",
									"// var signature = CryptoJS.HmacSHA256(token, secret);",
									"// signature = base64url(signature);",
									"// console.log(\"Signature\", signature);",
									"// var signedToken = token + \".\" + signature;",
									"// console.log(\"signed token\", signedToken);",
									"",
									"// postman.setEnvironmentVariable(\"signed token\", signedToken);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableCookies": false,
						"followRedirects": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "response_type",
									"value": "code id_token",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "{{static_scope}} consent:urn:openbank:{{consent_id}}",
									"type": "text"
								},
								{
									"key": "client_assertion_type",
									"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
									"type": "text"
								},
								{
									"key": "client_assertion",
									"value": "{{par_jwt}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/par",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"par"
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Authorise - Step 1 (Hybrid) - /authorise",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store html interaction  and uuid to use in subsequent calls",
									"",
									"var html = cheerio(responseBody);",
									"var nextInteraction1 = html.find('#loginForm').attr('action');",
									"pm.environment.set(\"nextInteraction1\", nextInteraction1);",
									"",
									"// If the auth code had already been issued and was still valid, this",
									"// invocation would directly return it (no necessary login)",
									"// if that's the case, store the resulting auth_code ",
									"",
									"const htmlResponse = cheerio(responseBody);",
									"var temp_auth_code = html.find('[name=\"code\"]').val();",
									"var temp_id_token = html.find('[name=\"id_token\"]').val();",
									"var temp_state = html.find('[name=\"state\"]').val();",
									"const $ = cheerio.load(responseBody);",
									"var temp_cb_uri = $('form').attr('action');",
									"pm.environment.set(\"temp_auth_code\", temp_auth_code);",
									"pm.environment.set(\"temp_id_token\", temp_id_token);",
									"pm.environment.set(\"temp_state\", temp_state);",
									"pm.environment.set(\"temp_cb_uri\", temp_cb_uri);",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/authorise?client_id={{client_id}}&response_type=code%20id_token&scope={{static_scope_escaped}}%20consent:urn:openbank:{{consent_id}}&request_uri={{PAR_request_uri}}",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"authorise"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"description": "If you want to change this value, always do it by altering the corresponding env variable. IMPORTANT: This client_id, as well as its redirect uri and public key needs to be registered with the OIDC provider included in the reference implementation (Manual edit of client configuration file)"
								},
								{
									"key": "response_type",
									"value": "code%20id_token"
								},
								{
									"key": "scope",
									"value": "{{static_scope_escaped}}%20consent:urn:openbank:{{consent_id}}",
									"description": "Add the required scopes, separated by %20"
								},
								{
									"key": "request_uri",
									"value": "{{PAR_request_uri}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Authorise - Step 2 (Hybrid) - Submit login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store callback response from IdP to use in subsequent call",
									"",
									"const htmlResponse = cheerio(responseBody);",
									"var temp_auth_code = htmlResponse.find('[name=\"code\"]').val();",
									"var temp_id_token = htmlResponse.find('[name=\"id_token\"]').val();",
									"var temp_state = htmlResponse.find('[name=\"state\"]').val();",
									"const $ = cheerio.load(responseBody);",
									"var temp_cb_uri = $('form').attr('action');",
									"pm.environment.set(\"temp_auth_code\", temp_auth_code);",
									"pm.environment.set(\"temp_id_token\", temp_id_token);",
									"pm.environment.set(\"temp_state\", temp_state);",
									"pm.environment.set(\"temp_cb_uri\", temp_cb_uri);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "login",
									"value": "10203040",
									"type": "text"
								},
								{
									"key": "password",
									"value": "anyPasswordWillDo",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net{{nextInteraction1}}",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net{{nextInteraction1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Authorise - Step 2.5 (Hybrid)  - Follow redirect to display consent screen",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store URL to use in subsequent call",
									"",
									"var html = cheerio(responseBody);",
									"var nextInteraction2 = html.find('#consentForm').attr('action');",
									"",
									"pm.environment.set(\"nextInteraction2\", nextInteraction2);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "code",
									"value": "{{temp_auth_code}}",
									"type": "text"
								},
								{
									"key": "id_token",
									"value": "{{temp_id_token}}",
									"type": "text"
								},
								{
									"key": "state",
									"value": "{{temp_state}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{temp_cb_uri}}",
							"host": [
								"{{temp_cb_uri}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Authorise - Step 3 (Hybrid) - Submit consent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store auth code to use in subsequent call",
									"",
									"const htmlResponse = cheerio(responseBody);",
									"var auth_code = htmlResponse.find('[name=\"code\"]').val();",
									"pm.environment.set(\"auth_code\", auth_code);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "consent-status",
									"value": "AUTHORISED",
									"description": "Set to REJECTED to simulate the consent not being granted",
									"type": "text"
								},
								{
									"key": "ACCOUNT",
									"value": "0016272940883924",
									"description": "Simulates consent being granted for this scope (Set to empty if you want to simulate no consent)",
									"type": "text"
								},
								{
									"key": "ACCOUNT",
									"value": "0016272830853116",
									"description": "Simulates consent being granted for this scope (Set to empty if you want to simulate no consent)",
									"type": "text"
								},
								{
									"key": "CREDIT_CARD_ACCOUNT",
									"value": "00102398551199",
									"description": "Simulates consent being granted for this scope (Set to empty if you want to simulate no consent)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net{{nextInteraction2}}",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net{{nextInteraction2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Acquire Token - Step 4.1 - Generate Private Key JWT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store private_key_jwt to reuse in next call",
									"pm.environment.set(\"private_key_jwt\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/mock-obbr-client/privatekeyjwt?client_id={{client_id}}",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"mock-obbr-client",
								"privatekeyjwt"
							],
							"query": [
								{
									"key": "aud",
									"value": "http://pirulo.com",
									"disabled": true
								},
								{
									"key": "client_id",
									"value": "{{client_id}}"
								}
							]
						},
						"description": "Use Mock ADR client capabilities to generate the client_assertion required in the next step"
					},
					"response": []
				},
				{
					"name": "OIDC Acquire Token - Step 4.2 (Hybrid)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store scope, access token and id token to reuse in subsequent calls",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"access_token\", jsonData.access_token);",
									"pm.environment.set(\"id_token\", jsonData.id_token);",
									"pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"pm.environment.set(\"scope\", jsonData.scope);",
									"pm.environment.set(\"cdr_arrangement_id\", jsonData.cdr_arrangement_id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								},
								{
									"key": "code",
									"value": "{{auth_code}}",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "{{client_redirect_uri}}",
									"type": "text"
								},
								{
									"key": "refresh_token",
									"value": "true",
									"type": "text"
								},
								{
									"key": "client_assertion_type",
									"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
									"type": "text"
								},
								{
									"key": "client_assertion",
									"value": "{{private_key_jwt}}",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/token",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				}
			],
			"description": "These 4 requests automate the steps of obtaining an authorisation code by navigating through the mock login and consent screens and obtaining a token using the authorisation code\n Use this approach when testing a client that has been added during the initial setup, as those client are persisted in the mock oidc provider and have been defined as accepting basic client auth.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "OIDC - Authorise/Obtain Token (HF) - Auth Request",
			"item": [
				{
					"name": "Consent Step 0 -  Generate Auth request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store private_key_jwt to reuse in next call",
									"pm.environment.set(\"private_key_jwt\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/mock-obbr-client/authrequest?aud={{api_endpoint}}&client_id={{client_id}}&scope=consents&redirect_uri={{client_redirect_uri}}",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"mock-obbr-client",
								"authrequest"
							],
							"query": [
								{
									"key": "aud",
									"value": "{{api_endpoint}}"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}"
								},
								{
									"key": "state",
									"value": "af0ifjsldkl",
									"disabled": true
								},
								{
									"key": "scope",
									"value": "consents"
								},
								{
									"key": "redirect_uri",
									"value": "{{client_redirect_uri}}"
								},
								{
									"key": "nonce",
									"value": "n-0S6_WzA2Mj3",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Consent - Step 0.1 Acquire Token for Consent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store scope, access token and id token to reuse in subsequent calls",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"consent_access_token\", jsonData.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "consents",
									"type": "text"
								},
								{
									"key": "client_assertion_type",
									"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
									"type": "text"
								},
								{
									"key": "client_assertion",
									"value": "{{private_key_jwt}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/token",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consent - Step  0.5 Create Consent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store scope, access token and id token to reuse in subsequent calls",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"consent_id\", jsonData.data.consentId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{consent_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-fapi-auth-date",
								"value": "2021-09-08",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"loggedUser\": {\n      \"document\": {\n        \"identification\": \"11111111111\",\n        \"rel\": \"CPF\"\n      }\n    },\n    \"businessEntity\": {\n      \"document\": {\n        \"identification\": \"11111111111111\",\n        \"rel\": \"CNPJ\"\n      }\n    },\n    \"permissions\": {{permissions}},\n    \"expirationDateTime\": \"2024-05-21T08:30:00Z\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/consents/v2/consents",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"consents",
								"v2",
								"consents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 0 -  Generate Auth request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store private_key_jwt to reuse in next call",
									"pm.environment.set(\"private_key_jwt\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/mock-obbr-client/authrequest?aud={{api_endpoint}}&client_id={{client_id}}&scope={{static_scope_escaped}}%20consent:{{consent_id}}&redirect_uri={{client_redirect_uri}}&requested_cpf=43908445778&is_cpf_essential=true",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"mock-obbr-client",
								"authrequest"
							],
							"query": [
								{
									"key": "aud",
									"value": "{{api_endpoint}}"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}"
								},
								{
									"key": "state",
									"value": "af0ifjsldkl",
									"disabled": true
								},
								{
									"key": "scope",
									"value": "{{static_scope_escaped}}%20consent:{{consent_id}}"
								},
								{
									"key": "redirect_uri",
									"value": "{{client_redirect_uri}}"
								},
								{
									"key": "nonce",
									"value": "n-0S6_WzA2Mj3",
									"disabled": true
								},
								{
									"key": "requested_cpf",
									"value": "43908445778"
								},
								{
									"key": "is_cpf_essential",
									"value": "true"
								},
								{
									"key": "requested_cnpj",
									"value": "00000000",
									"disabled": true
								},
								{
									"key": "is_cnpj_essential",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Authorise - Step 1 (Hybrid) - /authorise",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store html interaction  and uuid to use in subsequent calls",
									"",
									"var html = cheerio(responseBody);",
									"var nextInteraction1 = html.find('#loginForm').attr('action');",
									"pm.environment.set(\"nextInteraction1\", nextInteraction1);",
									"",
									"// If the auth code had already been issued and was still valid, this",
									"// invocation would directly return it (no necessary login)",
									"// if that's the case, store the resulting auth_code ",
									"",
									"const htmlResponse = cheerio(responseBody);",
									"var temp_auth_code = html.find('[name=\"code\"]').val();",
									"var temp_id_token = html.find('[name=\"id_token\"]').val();",
									"var temp_state = html.find('[name=\"state\"]').val();",
									"const $ = cheerio.load(responseBody);",
									"var temp_cb_uri = $('form').attr('action');",
									"pm.environment.set(\"temp_auth_code\", temp_auth_code);",
									"pm.environment.set(\"temp_id_token\", temp_id_token);",
									"pm.environment.set(\"temp_state\", temp_state);",
									"pm.environment.set(\"temp_cb_uri\", temp_cb_uri);",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/authorise?client_id={{client_id}}&response_type=code%20id_token&request={{private_key_jwt}}",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"authorise"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"description": "If you want to change this value, always do it by altering the corresponding env variable. IMPORTANT: This client_id, as well as its redirect uri and public key needs to be registered with the OIDC provider included in the reference implementation (Manual edit of client configuration file)"
								},
								{
									"key": "response_type",
									"value": "code%20id_token"
								},
								{
									"key": "scope",
									"value": "{{static_scope_escaped}}%20consent:urn:openbank:{{consent_id}}",
									"description": "Add the required scopes, separated by %20",
									"disabled": true
								},
								{
									"key": "request",
									"value": "{{private_key_jwt}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Authorise - Step 2 (Hybrid) - Submit login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store callback response from IdP to use in subsequent call",
									"",
									"const htmlResponse = cheerio(responseBody);",
									"var temp_auth_code = htmlResponse.find('[name=\"code\"]').val();",
									"var temp_id_token = htmlResponse.find('[name=\"id_token\"]').val();",
									"var temp_state = htmlResponse.find('[name=\"state\"]').val();",
									"const $ = cheerio.load(responseBody);",
									"var temp_cb_uri = $('form').attr('action');",
									"pm.environment.set(\"temp_auth_code\", temp_auth_code);",
									"pm.environment.set(\"temp_id_token\", temp_id_token);",
									"pm.environment.set(\"temp_state\", temp_state);",
									"pm.environment.set(\"temp_cb_uri\", temp_cb_uri);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "login",
									"value": "10203040",
									"type": "text"
								},
								{
									"key": "password",
									"value": "anyPasswordWillDo",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net{{nextInteraction1}}",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net{{nextInteraction1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Authorise - Step 2.5 (Hybrid)  - Follow redirect to display consent screen",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store URL to use in subsequent call",
									"",
									"var html = cheerio(responseBody);",
									"var nextInteraction2 = html.find('#consentForm').attr('action');",
									"",
									"pm.environment.set(\"nextInteraction2\", nextInteraction2);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "code",
									"value": "{{temp_auth_code}}",
									"type": "text"
								},
								{
									"key": "id_token",
									"value": "{{temp_id_token}}",
									"type": "text"
								},
								{
									"key": "state",
									"value": "{{temp_state}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{temp_cb_uri}}",
							"host": [
								"{{temp_cb_uri}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Authorise - Step 3 (Hybrid) - Submit consent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store auth code to use in subsequent call",
									"",
									"const htmlResponse = cheerio(responseBody);",
									"var auth_code = htmlResponse.find('[name=\"code\"]').val();",
									"pm.environment.set(\"auth_code\", auth_code);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "consent-status",
									"value": "AUTHORISED",
									"description": "Set to REJECTED to simulate the consent not being granted",
									"type": "text"
								},
								{
									"key": "ACCOUNT",
									"value": "0016272940883924",
									"description": "Simulates consent being granted for this scope (Set to empty if you want to simulate no consent)",
									"type": "text"
								},
								{
									"key": "ACCOUNT",
									"value": "0016272830853116",
									"description": "Simulates consent being granted for this scope (Set to empty if you want to simulate no consent)",
									"type": "text"
								},
								{
									"key": "CREDIT_CARD_ACCOUNT",
									"value": "00102398551199",
									"description": "Simulates consent being granted for this scope (Set to empty if you want to simulate no consent)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net{{nextInteraction2}}",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net{{nextInteraction2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Acquire Token - Step 4.1 - Generate Private Key JWT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store private_key_jwt to reuse in next call",
									"pm.environment.set(\"private_key_jwt\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/mock-obbr-client/privatekeyjwt?client_id={{client_id}}",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"mock-obbr-client",
								"privatekeyjwt"
							],
							"query": [
								{
									"key": "aud",
									"value": "http://pirulo.com",
									"disabled": true
								},
								{
									"key": "client_id",
									"value": "{{client_id}}"
								}
							]
						},
						"description": "Use Mock ADR client capabilities to generate the client_assertion required in the next step"
					},
					"response": []
				},
				{
					"name": "OIDC Acquire Token - Step 4.2 (Hybrid)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store scope, access token and id token to reuse in subsequent calls",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"access_token\", jsonData.access_token);",
									"pm.environment.set(\"id_token\", jsonData.id_token);",
									"pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"pm.environment.set(\"scope\", jsonData.scope);",
									"pm.environment.set(\"cdr_arrangement_id\", jsonData.cdr_arrangement_id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								},
								{
									"key": "code",
									"value": "{{auth_code}}",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "{{client_redirect_uri}}",
									"type": "text"
								},
								{
									"key": "refresh_token",
									"value": "true",
									"type": "text"
								},
								{
									"key": "client_assertion_type",
									"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
									"type": "text"
								},
								{
									"key": "client_assertion",
									"value": "{{private_key_jwt}}",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/token",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				}
			],
			"description": "These 4 requests automate the steps of obtaining an authorisation code by navigating through the mock login and consent screens and obtaining a token using the authorisation code\n Use this approach when testing a client that has been added during the initial setup, as those client are persisted in the mock oidc provider and have been defined as accepting basic client auth.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "OIDC - Other requests",
			"item": [
				{
					"name": "OIDC Get Config",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/.well-known/openid-configuration",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								".well-known",
								"openid-configuration"
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Token Refresh",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store access token, id token and refresh token to reuse in subsequent calls",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"access_token\", jsonData.access_token);",
									"pm.environment.set(\"id_token\", jsonData.id_token);",
									"pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "x-fapi-customer-ip-address",
								"value": "192.168.1.1",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "refresh_token",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "{{static_scope}} consent:{{consent_id}}",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}",
									"type": "text"
								},
								{
									"key": "refresh_token",
									"value": "{{refresh_token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/token",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Token Introspection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{refresh_token}}",
									"type": "text"
								},
								{
									"key": "token_type_hint",
									"value": "refresh_token",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/token/introspection",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"token",
								"introspection"
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Token Revocation (Access Token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "text"
								},
								{
									"key": "token_type_hint",
									"value": "access_token",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/token/revocation",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"token",
								"revocation"
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Token Revocation (Refresh Token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{refresh_token}}",
									"type": "text"
								},
								{
									"key": "token_type_hint",
									"value": "refresh_token",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/token/revocation",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"token",
								"revocation"
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC UserInfo",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/me",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "OIDC Get JWKS Certs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/jwks",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"jwks"
							]
						}
					},
					"response": []
				}
			],
			"description": "Requests to the other oidc endpoints (eg: .well-known/configuration, refresh token, revoke token ,etc)"
		},
		{
			"name": "Products and Services",
			"item": [
				{
					"name": "Personal Accounts",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-fapi-interaction-id",
								"type": "text",
								"value": "2965365e-ab4d-4158-8eda-ca48f1f4f225",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/products-services/v1/personal-accounts",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"products-services",
								"v1",
								"personal-accounts"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Business Accounts",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-fapi-interaction-id",
								"type": "text",
								"value": "2965365e-ab4d-4158-8eda-ca48f1f4f225",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/products-services/v1/business-accounts",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"products-services",
								"v1",
								"business-accounts"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Personal Loans",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-fapi-interaction-id",
								"type": "text",
								"value": "2965365e-ab4d-4158-8eda-ca48f1f4f225",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/products-services/v1/personal-loans",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"products-services",
								"v1",
								"personal-loans"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Business Loans",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-fapi-interaction-id",
								"type": "text",
								"value": "2965365e-ab4d-4158-8eda-ca48f1f4f225",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/products-services/v1/business-loans",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"products-services",
								"v1",
								"business-loans"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Personal Financing",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-fapi-interaction-id",
								"type": "text",
								"value": "2965365e-ab4d-4158-8eda-ca48f1f4f225",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/products-services/v1/personal-financings",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"products-services",
								"v1",
								"personal-financings"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Business Financing",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-fapi-interaction-id",
								"type": "text",
								"value": "2965365e-ab4d-4158-8eda-ca48f1f4f225",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/products-services/v1/business-financings",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"products-services",
								"v1",
								"business-financings"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Personal Invoice Financing",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-fapi-interaction-id",
								"type": "text",
								"value": "2965365e-ab4d-4158-8eda-ca48f1f4f225",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/products-services/v1/personal-invoice-financings",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"products-services",
								"v1",
								"personal-invoice-financings"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Business Invoice Financing",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-fapi-interaction-id",
								"type": "text",
								"value": "2965365e-ab4d-4158-8eda-ca48f1f4f225",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/products-services/v1/business-invoice-financings",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"products-services",
								"v1",
								"business-invoice-financings"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Personal Credit Cards",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-fapi-interaction-id",
								"type": "text",
								"value": "2965365e-ab4d-4158-8eda-ca48f1f4f225",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/products-services/v1/personal-credit-cards",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"products-services",
								"v1",
								"personal-credit-cards"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Business Credit Cards",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-fapi-interaction-id",
								"type": "text",
								"value": "2965365e-ab4d-4158-8eda-ca48f1f4f225",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/products-services/v1/business-credit-cards",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"products-services",
								"v1",
								"business-credit-cards"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Personal Overdrafts",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-fapi-interaction-id",
								"type": "text",
								"value": "2965365e-ab4d-4158-8eda-ca48f1f4f225",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/products-services/v1/personal-unarranged-account-overdraft",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"products-services",
								"v1",
								"personal-unarranged-account-overdraft"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Business Overdrafts",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-fapi-interaction-id",
								"type": "text",
								"value": "2965365e-ab4d-4158-8eda-ca48f1f4f225",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/products-services/v1/business-unarranged-account-overdraft",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"products-services",
								"v1",
								"business-unarranged-account-overdraft"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Options for Get Products for Personal Accounts",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "OPTIONS",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-fapi-interaction-id",
								"type": "text",
								"value": "2965365e-ab4d-4158-8eda-ca48f1f4f225",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/products-services/v1/personal-accounts",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"products-services",
								"v1",
								"personal-accounts"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Channels",
			"item": [
				{
					"name": "Branches",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-fapi-interaction-id",
								"type": "text",
								"value": "2965365e-ab4d-4158-8eda-ca48f1f4f225",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/channels/v1/branches",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"channels",
								"v1",
								"branches"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Electronic Channels",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-fapi-interaction-id",
								"type": "text",
								"value": "2965365e-ab4d-4158-8eda-ca48f1f4f225",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/channels/v1/electronic-channels",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"channels",
								"v1",
								"electronic-channels"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Phone Channels",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-fapi-interaction-id",
								"type": "text",
								"value": "2965365e-ab4d-4158-8eda-ca48f1f4f225",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/channels/v1/phone-channels",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"channels",
								"v1",
								"phone-channels"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Banking Agents",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-fapi-interaction-id",
								"type": "text",
								"value": "2965365e-ab4d-4158-8eda-ca48f1f4f225",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/channels/v1/banking-agents",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"channels",
								"v1",
								"banking-agents"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ATMs",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-fapi-interaction-id",
								"type": "text",
								"value": "2965365e-ab4d-4158-8eda-ca48f1f4f225",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/channels/v1/shared-automated-teller-machines",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"channels",
								"v1",
								"shared-automated-teller-machines"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Options for Branches",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "OPTIONS",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-fapi-interaction-id",
								"type": "text",
								"value": "2965365e-ab4d-4158-8eda-ca48f1f4f225",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/channels/v1/branches",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"channels",
								"v1",
								"branches"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Discovery",
			"item": [
				{
					"name": "Get Outages",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/discovery/v1/outages",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"discovery",
								"v1",
								"outages"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Status",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "x-min-v",
								"value": "2",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/discovery/v1/status",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"discovery",
								"v1",
								"status"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Options for Get Status",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"accept-encoding": true,
							"connection": true,
							"user-agent": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "OPTIONS",
						"header": [
							{
								"key": "x-v",
								"value": "1",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/discovery/v1/status",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"discovery",
								"v1",
								"status"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Get Metrics",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{cdr_register_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-v",
								"type": "text",
								"value": "2"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/admin/v1/metrics",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"admin",
								"v1",
								"metrics"
							],
							"query": [
								{
									"key": "period",
									"value": "CURRENT",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Consents",
			"item": [
				{
					"name": "Acquire Token for Consent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store scope, access token and id token to reuse in subsequent calls",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"consent_access_token\", jsonData.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "consents",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/token",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Consent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store scope, access token and id token to reuse in subsequent calls",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"consent_id\", jsonData.data.consentId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{consent_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-fapi-auth-date",
								"value": "2021-09-08",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"loggedUser\": {\n      \"document\": {\n        \"identification\": \"11111111111\",\n        \"rel\": \"CPF\"\n      }\n    },\n    \"businessEntity\": {\n      \"document\": {\n        \"identification\": \"11111111111111\",\n        \"rel\": \"CNPJ\"\n      }\n    },\n    \"permissions\": {{permissions}},\n    \"expirationDateTime\": \"2022-05-21T08:30:00Z\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/consents/v2/consents",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"consents",
								"v2",
								"consents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Consent",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{consent_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-fapi-auth-date",
								"value": "2021-09-01",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/consents/v2/consents/{{consent_id}}",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"consents",
								"v2",
								"consents",
								"{{consent_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Consent",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{consent_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "x-fapi-auth-date",
								"value": "2021-09-01",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/consents/v2/consents/{{consent_id}}",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"consents",
								"v2",
								"consents",
								"{{consent_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Resources",
			"item": [
				{
					"name": "Get Resources",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-fapi-auth-date",
								"value": "2021-09-22",
								"type": "text"
							},
							{
								"key": "x-fapi-customer-ip-address",
								"value": "168.0.0.1",
								"type": "text"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "sadjgojg2",
								"type": "text"
							},
							{
								"key": "x-customer-user-agent",
								"value": "theAgent",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/resources/v2/resources",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"resources",
								"v2",
								"resources"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Options for Get Resources",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "OPTIONS",
						"header": [
							{
								"key": "x-fapi-auth-date",
								"value": "2021-09-22",
								"type": "text"
							},
							{
								"key": "x-fapi-customer-ip-address",
								"value": "168.0.0.1",
								"type": "text"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "sadjgojg2",
								"type": "text"
							},
							{
								"key": "x-customer-user-agent",
								"value": "theAgent",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/resources/v2/resources",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"resources",
								"v2",
								"resources"
							],
							"query": [
								{
									"key": "accountType",
									"value": "CONTA_DEPOSITO_A_VISTA",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Accounts",
			"item": [
				{
					"name": "Get Accounts",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-fapi-auth-date",
								"value": "2021-09-22",
								"type": "text"
							},
							{
								"key": "x-fapi-customer-ip-address",
								"value": "168.0.0.1",
								"type": "text"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "sadjgojg2",
								"type": "text"
							},
							{
								"key": "x-customer-user-agent",
								"value": "theAgent",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/accounts/v2/accounts",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"accounts",
								"v2",
								"accounts"
							],
							"query": [
								{
									"key": "accountType",
									"value": "CONTA_DEPOSITO_A_VISTA",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Options for Get Accounts",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "OPTIONS",
						"header": [
							{
								"key": "x-fapi-auth-date",
								"value": "2021-09-22",
								"type": "text"
							},
							{
								"key": "x-fapi-customer-ip-address",
								"value": "168.0.0.1",
								"type": "text"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "sadjgojg2",
								"type": "text"
							},
							{
								"key": "x-customer-user-agent",
								"value": "theAgent",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/accounts/v2/accounts",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"accounts",
								"v2",
								"accounts"
							],
							"query": [
								{
									"key": "accountType",
									"value": "CONTA_DEPOSITO_A_VISTA",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Account Details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-fapi-auth-date",
								"value": "2021-09-22",
								"type": "text"
							},
							{
								"key": "x-fapi-customer-ip-address",
								"value": "168.0.0.1",
								"type": "text"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "sadjgojg2",
								"type": "text"
							},
							{
								"key": "x-customer-user-agent",
								"value": "theAgent",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/accounts/v2/accounts/{{account_id}}",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"accounts",
								"v2",
								"accounts",
								"{{account_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Account Balances",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-fapi-auth-date",
								"value": "2021-09-22",
								"type": "text"
							},
							{
								"key": "x-fapi-customer-ip-address",
								"value": "168.0.0.1",
								"type": "text"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "sadjgojg2",
								"type": "text"
							},
							{
								"key": "x-customer-user-agent",
								"value": "theAgent",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/accounts/v2/accounts/{{account_id}}/balances",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"accounts",
								"v2",
								"accounts",
								"{{account_id}}",
								"balances"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Account Transactions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-fapi-auth-date",
								"value": "2021-09-22",
								"type": "text"
							},
							{
								"key": "x-fapi-customer-ip-address",
								"value": "168.0.0.1",
								"type": "text"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "sadjgojg2",
								"type": "text"
							},
							{
								"key": "x-customer-user-agent",
								"value": "theAgent",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/accounts/v2/accounts/{{account_id}}/transactions",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"accounts",
								"v2",
								"accounts",
								"{{account_id}}",
								"transactions"
							],
							"query": [
								{
									"key": "fromBookingDate",
									"value": "2021-10-04",
									"disabled": true
								},
								{
									"key": "toBookingDate",
									"value": "2021-10-04",
									"disabled": true
								},
								{
									"key": "creditDebitIndicator",
									"value": "DEBITO",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Account Current Transactions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-fapi-auth-date",
								"value": "2021-09-22",
								"type": "text"
							},
							{
								"key": "x-fapi-customer-ip-address",
								"value": "168.0.0.1",
								"type": "text"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "sadjgojg2",
								"type": "text"
							},
							{
								"key": "x-customer-user-agent",
								"value": "theAgent",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/accounts/v2/accounts/{{account_id}}/transactions-current",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"accounts",
								"v2",
								"accounts",
								"{{account_id}}",
								"transactions-current"
							],
							"query": [
								{
									"key": "page",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page-size",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Account Overdraft Limits",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-fapi-auth-date",
								"value": "2021-09-22",
								"type": "text"
							},
							{
								"key": "x-fapi-customer-ip-address",
								"value": "168.0.0.1",
								"type": "text"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "sadjgojg2",
								"type": "text"
							},
							{
								"key": "x-customer-user-agent",
								"value": "theAgent",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/accounts/v2/accounts/{{account_id}}/overdraft-limits",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"accounts",
								"v2",
								"accounts",
								"{{account_id}}",
								"overdraft-limits"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Mock OBBR Client",
			"item": [
				{
					"name": "Mock OBBR Client Get JWKS Certs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/mock-obbr-client/jwks",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"mock-obbr-client",
								"jwks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Mock OBBR Client - Get Private Key JWT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store private_key_jwt to reuse in next call",
									"pm.environment.set(\"private_key_jwt\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/mock-obbr-client/privatekeyjwt?client_id={{client_id}}",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"mock-obbr-client",
								"privatekeyjwt"
							],
							"query": [
								{
									"key": "aud",
									"value": "http://pirulo.com",
									"disabled": true
								},
								{
									"key": "client_id",
									"value": "{{client_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Mock OBBR Client - Generate Auth request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Store private_key_jwt to reuse in next call",
									"pm.environment.set(\"private_key_jwt\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{org}}-{{env}}.apigee.net/mock-obbr-client/authrequest?aud={{api_endpoint}}&client_id={{client_id}}&scope={{static_scope_escaped}}%20consent:urn:openbank:{{consent_id}}&redirect_uri={{client_redirect_uri}}&requested_cnpj=43908445778&is_cnpj_essential=true",
							"protocol": "https",
							"host": [
								"{{org}}-{{env}}",
								"apigee",
								"net"
							],
							"path": [
								"mock-obbr-client",
								"authrequest"
							],
							"query": [
								{
									"key": "aud",
									"value": "{{api_endpoint}}"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}"
								},
								{
									"key": "state",
									"value": "af0ifjsldkl",
									"disabled": true
								},
								{
									"key": "scope",
									"value": "{{static_scope_escaped}}%20consent:urn:openbank:{{consent_id}}"
								},
								{
									"key": "redirect_uri",
									"value": "{{client_redirect_uri}}"
								},
								{
									"key": "nonce",
									"value": "n-0S6_WzA2Mj3",
									"disabled": true
								},
								{
									"key": "requested_cpf",
									"value": "123456",
									"disabled": true
								},
								{
									"key": "is_cpf_essential",
									"value": "true",
									"disabled": true
								},
								{
									"key": "requested_cnpj",
									"value": "43908445778"
								},
								{
									"key": "is_cnpj_essential",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}