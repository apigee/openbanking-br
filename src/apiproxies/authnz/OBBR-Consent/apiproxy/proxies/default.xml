<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <DefaultFaultRule name="DefaultFaultRule">
        <Step>
            <Condition>message.status.code != "200"</Condition>
            <FaultRules/>
            <Name>AM-Add-CORS-Headers</Name>
        </Step>
        <Step>
            <FaultRules/>
            <Name>FC-AddFAPIInteractionId</Name>
        </Step>
        <Step>
            <Name>AM-Set-Meta-Link-Settings-For-Error-Response</Name>
        </Step>
        <Step>
            <Name>FC-AddResponseHeaders-Link-Meta</Name>
        </Step>
        <Step>
            <FaultRules/>
            <Name>FC-CollectPerformanceSLO</Name>
        </Step>
        <AlwaysEnforce>true</AlwaysEnforce>
    </DefaultFaultRule>
    <Description/>
    <FaultRules>
        <FaultRule name="Invalid Scope">
            <Condition>(fault.name = "InsufficientScope")</Condition>
            <Step>
                <FaultRules/>
                <Name>AM-InvalidScope</Name>
            </Step>
        </FaultRule>
        <FaultRule name="Invalid Access Token">
            <Condition>(fault.name Matches "*access_token*") or (fault.name = "apiresource_doesnot_exist") or (fault.name = "InvalidAccessToken") or (fault.name = "InvalidAPICallAsNoApiProductMatchFound")</Condition>
            <Step>
                <FaultRules/>
                <Name>EV-GetErrorDetail</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>AM-TokenNotVerified</Name>
            </Step>
        </FaultRule>
    </FaultRules>
    <Flows>
        <Flow name="Create Consent">
            <Description>Create a new consent</Description>
            <Request>
                <Step>
                    <Name>EV-ExtractConsentRequest</Name>
                </Step>
                <Step>
                    <Name>AM-SetConsentPayload</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>EV-ExtractConsentResponse</Name>
                    <Condition>response.status.code StartsWith "2"</Condition>
                </Step>
                <Step>
                    <Name>AM-SetConsentResponse</Name>
                    <Condition>response.status.code StartsWith "2"</Condition>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/consents") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="Get Consent">
            <Description>Get details about a specific consent</Description>
            <Request>
                <Step>
                    <Name>EV-ConsentIdFromURL</Name>
                </Step>
                <Step>
                    <Name>AM-SetExpectedClientId</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>EV-ExtractConsentResponse</Name>
                    <Condition>response.status.code StartsWith "2"</Condition>
                </Step>
                <Step>
                    <Name>AM-SetConsentResponse</Name>
                    <Condition>response.status.code StartsWith "2"</Condition>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/consents/{theConsentId}") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="Delete Consent">
            <Description>Delete a specific consent</Description>
            <Request>
                <Step>
                    <Name>EV-ConsentIdFromURL</Name>
                </Step>
                <Step>
                    <Name>AM-SetExpectedClientId</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>SC-RevokeTokensBoundToConsent</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/consents/{theConsentId}") and (request.verb = "DELETE")</Condition>
        </Flow>
        <Flow name="unsupportedMethod">
            <Description>Method Not Allowed</Description>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>RF-UnsupportedMethod</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>((proxy.pathsuffix MatchesPath "/consents/") and (request.verb != "POST") ) or ((proxy.pathsuffix MatchesPath "/consents/{theConsentId}") and (request.verb != "GET") and (request.verb != "DELETE") )</Condition>
        </Flow>
        <Flow name="notFound">
            <Description>Not Found</Description>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>RF-NotFound</Name>
                </Step>
            </Request>
            <Response/>
        </Flow>
    </Flows>
    <PostFlow name="PostFlow">
        <Request/>
        <Response>
            <Step>
                <FaultRules/>
                <Name>FC-AddResponseHeaders-Link-Meta</Name>
                <Condition>request.verb != "DELETE"</Condition>
            </Step>
            <Step>
                <FaultRules/>
                <Name>FC-CollectPerformanceSLO</Name>
            </Step>
        </Response>
    </PostFlow>
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Name>AM-Set-Pagination-Settings</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>FC-CheckRequestHeaders</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>OA-VerifyToken</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>FC-VerifyHoK</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>FC-TrafficThresholds</Name>
            </Step>
        </Request>
        <Response/>
    </PreFlow>
    <HTTPProxyConnection>
        <BasePath>/consents/v1</BasePath>
        <Properties/>
        <VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="create-new-consent">
        <TargetEndpoint>create-new-consent</TargetEndpoint>
        <Condition>request.verb = "POST"</Condition>
    </RouteRule>
    <RouteRule name="manage-existing-consents">
        <TargetEndpoint>manage-existing-consents</TargetEndpoint>
    </RouteRule>
</ProxyEndpoint>